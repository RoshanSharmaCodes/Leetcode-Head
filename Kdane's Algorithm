Kdane's Algorithm (Largest Sum Contiguous Subarray)

Intution Behind Kdan's Algorithm
The idea of Kadaneâ€™s algorithm is to maintain a variable max_ending_here that stores the maximum sum contiguous subarray ending at current 
index and a variable max_so_far stores the maximum sum of contiguous subarray found so far, Everytime there is a positive-sum value in max_ending_here 
compare it with max_so_far and update max_so_far if it is greater than max_so_far.

Code:
function maxSubArraySum(a, size)
{
    var maxint = Math.pow(2, 53)
    var max_so_far = -maxint - 1
    var max_ending_here = 0
      
    for (var i = 0; i < size; i++)
    {
        max_ending_here = max_ending_here + a[i]
        if (max_so_far < max_ending_here)
            max_so_far = max_ending_here
 
        if (max_ending_here < 0)
            max_ending_here = 0 
    }
    return max_so_far
}
  
